version: "3"
services:
  prometheus:
    image: prom/prometheus:v2.16.0
    networks:
      - metrics
      - traefik
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  cadvisor:
    image: rasaro/cadvisor:v0.36.0
    networks:
      - metrics
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global

  node-exporter:
    image: prom/node-exporter:v1.0.0-rc.0
    command:
      - --no-collector.arp
      - --no-collector.bcache
      - --no-collector.bonding
      # - --no-collector.boottime
      - --no-collector.conntrack
      # - --no-collector.cpu
      # - --no-collector.cpufreq
      # - --no-collector.diskstats
      - --no-collector.edac
      - --no-collector.entropy
      # - --no-collector.exec
      - --no-collector.filefd
      # - --no-collector.filesystem
      # - --no-collector.hwmon
      - --no-collector.infiniband
      - --no-collector.ipvs
      # - --no-collector.loadavg
      - --no-collector.mdadm
      # - --no-collector.meminfo
      - --no-collector.netclass
      # - --no-collector.netdev
      - --no-collector.netstat
      - --no-collector.nfs
      - --no-collector.nfsd
      - --no-collector.pressure
      - --no-collector.rapl
      - --no-collector.schedstat
      - --no-collector.sockstat
      - --no-collector.softnet
      # - --no-collector.stat
      - --no-collector.textfile
      # - --no-collector.thermal_zone
      # - --no-collector.time
      - --no-collector.timex
      # - --no-collector.uname
      - --no-collector.vmstat
      - --no-collector.xfs
      - --no-collector.zfs
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/host
    hostname: "{{.Node.Hostname}}"
    networks:
      - metrics
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host:ro,rslave
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager:v0.20.0
    networks:
      - metrics
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
      - ${ALERTMANAGER_STORAGE_FOLDER}:/alertmanager
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  karma:
    image: lmierzwa/karma:v0.56
    environment:
      - ALERTMANAGER_URI=http://alertmanager:9093
    networks:
      - metrics
      - traefik
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.routers.karma.rule=Host(`karma.metrics.${DOMAIN}`)
        - traefik.http.routers.karma.entryPoints=https
        - traefik.http.routers.karma.tls=true
        - traefik.http.routers.karma.tls.certresolver=letsencrypt
        - traefik.http.services.karma.loadbalancer.server.port=8080

  grafana:
    image: grafana/grafana:6.7.1
    environment:
      - GF_INSTALL_PLUGINS=${GRAFANA_PLUGINS}
    networks:
      - metrics
      - traefik
    volumes:
      - ${GRAFANA_DATA_FOLDER}:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.grafana.rule=Host(`grafana.metrics.${DOMAIN}`)
        - traefik.http.routers.grafana.entryPoints=https
        - traefik.http.routers.grafana.tls=true
        - traefik.http.routers.grafana.tls.certresolver=letsencrypt
        - traefik.http.services.grafana.loadbalancer.server.port=3000

networks:
  metrics:
  traefik:
    external: true
